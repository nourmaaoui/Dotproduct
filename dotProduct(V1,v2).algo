//algo1
PROCEDURE dotprod(n:INTEGER; v1,v2:ARRAY_OF FLOAT)
VAR
  ps: FLOAT;
  i: INTEGER;
BEGIN
    FOR i FROM 0 TO n-1 STEP 1  DO
        ps= ps+ v1[i]* v2[i];
    END_FOR
    writeln (ps);
END 
ALGORITHM dotProduct1

VAR
i,j:integer
FOR i FROM 0 TO 2n-1 STEP 1  DO
  FOR j FROM 0 TO 3 STEP 1  DO
    readln(T[i,j])
  END_FOR
END_FOR
FOR i FROM 0 TO 2n-1 STEP 1  DO
  FOR j FROM 0 TO 3 STEP 1  DO
    writeln(T[i,j])
  END_FOR
END_FOR
dotprod(n,v1,v2);
IF ps=0 THEN
  writeln("the two given vectors are orthogonal")
END_IF
END

// algo2 

function dotprod(n:INTEGER; v1,v2:ARRAY_OF FLOAT)
VAR
  ps: FLOAT;
  i: INTEGER;
BEGIN
    FOR i FROM 0 TO n-1 STEP 1  DO
        ps= ps+ v1[i]* v2[i];
    END_FOR
    return (ps);
END 
ALGORITHM dotProduct2
VAR
i,j:integer
FOR i FROM 0 TO 2n-1 STEP 1  DO
  FOR j FROM 0 TO 3 STEP 1  DO
    readln(T[i,j])
  END_FOR
END_FOR
FOR i FROM 0 TO 2n-1 STEP 1  DO
  FOR j FROM 0 TO 3 STEP 1  DO
    writeln(T[i,j])
  END_FOR
END_FOR
ps := dotprod () ;
IF ps=0 THEN
  writeln("the two given vectors are orthogonal")
END_IF
END





















